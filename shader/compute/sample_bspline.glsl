#version 450

//uniform float[] aux_matrix;
layout(std430, binding=0) buffer ParametersSSBO{
    float parameters[];
};

layout(local_size_x = 512, local_size_y = 1, local_size_z = 1) in;
void main() {
    if (gl_GlobalInvocationID.x < parameters.length()) {
        parameters[gl_GlobalInvocationID.x] = -parameters[gl_GlobalInvocationID.x];
    }
}


//const float[185] sample_aux_matrix = {
//        /*------------------ MB1f, 首地址0 ------------------*/
//        1.0,
//
//        /*------------------ MB2, 首地址1 ------------------*/
//
//        1.0, 0.0,
//        -1.0, 1.0,
//
//        /*------------------ MB30, 首地址5 -----------------*/
//
//        1.0, 0.0, 0.0,
//        -2.0, 2.0, 0.0,
//        1.0, -2.0, 1.0,
//
//        /*------------------ MB31, 首地址14 -----------------*/
//
//        1.0, 0.0, 0.0,
//        -2.0, 2.0, 0.0,
//        1.0, -1.5, 0.5,
//
//        /*------------------ MB32, 首地址23 -----------------*/
//
//        0.5, 0.5, 0.0,
//        -1.0, 1.0, 0.0,
//        0.5, -1.5, 1.0,
//
//        /*------------------ MB33, 首地址32 -----------------*/
//
//        0.5, 0.5, 0.0,
//        -1.0, 1.0, 0.0,
//        0.5, -1.0, 0.5,
//
//        /*------------------ MB40, 首地址41 -----------------*/
//
//        1.0, 0.0, 0.0, 0.0,
//        -3.0, 3.0, 0.0, 0.0,
//        3.0, -6.0, 3.0, 0.0,
//        -1.0, 3.0, -3.0, 1.0,
//
//        /*------------------ MB41, 首地址57 -----------------*/
//
//        1.0, 0.0, 0.0, 0.0,
//        -3.0, 3.0, 0.0, 0.0,
//        3.0, -4.5, 1.5, 0.0,
//        -1.0, 1.75, -1.0, 0.25,
//
//        /*------------------ MB42, 首地址73 -----------------*/
//
//        0.25, 0.5, 0.25, 0.0,
//        -0.75, 0.0, 0.75, 0.0,
//        0.75, -1.5, 0.75, 0.0,
//        -0.25, 1.0, -1.75, 1.0,
//
//        /*------------------ MB43, 首地址89 -----------------*/
//
//        1.0, 0.0, 0.0, 0.0,
//        -3.0, 3.0, 0.0, 0.0,
//        3.0, -4.5, 1.5, 0.0,
//        -1.0, 1.75, -0.91666666666666666666, 0.16666666666666666666,
//
//        /*------------------ MB44, 首地址105 -----------------*/
//
//        0.25, 0.58333333333333333333, 0.16666666666666666666, 0.0,
//        -0.75, 0.25, 0.5, 0.0,
//        0.75, -1.25, 0.5, 0.0,
//        -0.25, 0.58333333333333333333, -0.58333333333333333333, 0.25,
//
//        /*------------------ MB45, 首地址121 -----------------*/
//
//        0.16666666666666666666, 0.58333333333333333333, 0.25, 0.0,
//        -0.5, -0.25, 0.75, 0.0,
//        0.5, -1.25, 0.75, 0.0,
//        -0.16666666666666666666, 0.91666666666666666666, -1.75, 1.0,
//
//        /*------------------ MB46, 首地址137 -----------------*/
//
//        0.25, 0.58333333333333333333, 0.16666666666666666666, 0.0,
//        -0.75, 0.25, 0.5, 0.0,
//        0.75, -1.25, 0.5, 0.0,
//        -0.25, 0.58333333333333333333, -0.5, 0.16666666666666666666,
//
//        /*------------------ MB47, 首地址153 -----------------*/
//
//        0.16666666666666666666, 0.66666666666666666666, 0.16666666666666666666, 0.0,
//        -0.5, 0.0, 0.5, 0.0,
//        0.5, -1.0, 0.5, 0.0,
//        -0.16666666666666666666, 0.5, -0.58333333333333333333, 0.25,
//
//        /*------------------ MB48, 首地址169 -----------------*/
//
//        0.16666666666666666666, 0.66666666666666666666, 0.16666666666666666666, 0.0,
//        -0.5, 0.0, 0.5, 0.0,
//        0.5, -1.0, 0.5, 0.0,
//        -0.16666666666666666666, 0.5, -0.5, 0.16666666666666666666};


//int matrixCase(in int order,in int ctrlPointNum,in int leftIdx) {
//    if (order == 1){
//        return 0;                    // MB1
//    } else if (order == 2) {
//        return 1;                // MB2
//    } else if (order == 3) {
//        if (ctrlPointNum == 3){
//            return 5;            // MB30
//        } else {
//            if (leftIdx == 2){
//                return 14;    // MB31
//            } else if (leftIdx == ctrlPointNum - 1){
//                return 23;    // MB32
//            } else{
//                return 32;    // MB33
//            }
//        }
//    } else {
//        if (ctrlPointNum == 4){
//            return 41;        // MB40
//        } else if (ctrlPointNum == 5) {
//            if (leftIdx == 3){
//                return 57;    // MB41
//            } else {
//                return 73;    // MB42
//            }
//        } else if (ctrlPointNum == 6) {
//            if (leftIdx == 3){
//                return 89;    // MB43
//            } else if (leftIdx == 4) {
//
//                return 105;    // MB44
//            } else {
//                return 121;    // MB45
//            }
//        } else {
//            if (leftIdx == 3){
//                return 89;    // MB43
//            } else if (leftIdx == 4) {
//                return 137;    // MB46
//            } else if (leftIdx == ctrlPointNum - 2) {
//                return 153;    // MB47
//            } else if (leftIdx == ctrlPointNum - 1) {
//                return 121;    // MB45
//            }else {
//                return 169;    // MB48
//            }
//        }
//    }
//}

